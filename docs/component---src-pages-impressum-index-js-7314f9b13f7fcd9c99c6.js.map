{"version":3,"sources":["webpack:///./src/pages/impressum/index.js"],"names":["colors","theme","fontSizes","fonts","StyledMainContainer","styled","Main","mixins","flexBetween","StyledGrid","div","media","desktop","StyledPostInner","boxShadow","borderRadius","transition","lightNavy","StyledPost","StyledPostHeader","StyledFolder","green","StyledPostName","h5","xxl","lightestSlate","StyledPostDescription","lightSlate","StyledDate","span","SFMono","xs","StyledTags","ul","inlineLink","ImpressumPage","location","postsImpressum","data","allMarkdownRemark","edges","rel","href","className","target","length","map","i","frontmatter","node","title","description","slug","date","tags","d","Date","key","tabIndex","to","toLocaleDateString","tag","kebabCase","pageQuery"],"mappings":"8aASQA,EAA6BC,IAA7BD,OAAQE,EAAqBD,IAArBC,UAAWC,EAAUF,IAAVE,MAErBC,EAAsBC,YAAOC,KAAV,iFAAGD,CAAH,0TAgBnBE,IAAOC,aAKPC,EAAaJ,IAAOK,IAAV,wEAAGL,CAAH,iJAQVM,IAAMC,QARI,MAWVC,EAAkBR,IAAOK,IAAV,6EAAGL,CAAH,wLACjBE,IAAOO,UACPP,IAAOC,YAMQP,IAAMc,aACTd,IAAMe,WACAhB,EAAOiB,WAMvBC,EAAab,IAAOK,IAAV,wEAAGL,CAAH,8FACAJ,IAAMe,WAKhBH,GAKAM,EAAmBd,IAAOK,IAAV,8EAAGL,CAAH,4BAClBE,IAAOC,aAGLY,EAAef,IAAOK,IAAV,0EAAGL,CAAH,2CACPL,EAAOqB,OAMZC,EAAiBjB,IAAOkB,GAAV,4EAAGlB,CAAH,6CAELH,EAAUsB,IACdxB,EAAOyB,eAEZC,EAAwBrB,IAAOK,IAAV,mFAAGL,CAAH,8BAEhBL,EAAO2B,YAEZC,EAAavB,IAAOwB,KAAV,wEAAGxB,CAAH,sEAECF,EAAM2B,OACR5B,EAAU6B,GACd/B,EAAO2B,YAEZK,EAAa3B,IAAO4B,GAAV,wEAAG5B,CAAH,8MASGF,EAAM2B,OACR5B,EAAU6B,GACd/B,EAAOqB,MAOZd,IAAO2B,YA4EAC,UAvEO,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SACjBC,EADsC,EAAXC,KACLC,kBAAkBC,MAE9C,OACE,kBAAC,IAAD,CAAQJ,SAAUA,GAChB,kBAAC,SAAD,KACE,4FACA,0BAAMK,IAAI,YAAYC,KAAK,gCAG7B,kBAACtC,EAAD,KACE,gCACE,wBAAIuC,UAAU,aAAd,sCACA,uBAAGA,UAAU,YACX,uBACED,KAAK,6FACLE,OAAO,SACPH,IAAI,uBAHN,0FASJ,kBAAChC,EAAD,KACE,yBAAKkC,UAAU,kBACZN,EAAeQ,OAAS,GACvBR,EAAeS,KAAI,WAAWC,GAAO,IAC3BC,EAD0B,EAAdC,KACZD,YACAE,EAAyCF,EAAzCE,MAAOC,EAAkCH,EAAlCG,YAAaC,EAAqBJ,EAArBI,KAAMC,EAAeL,EAAfK,KAAMC,EAASN,EAATM,KAClCC,EAAI,IAAIC,KAAKH,GAEnB,OACE,kBAACnC,EAAD,CAAYuC,IAAKV,EAAGW,SAAS,KAC3B,kBAAC7C,EAAD,KACE,gCACE,kBAAC,OAAD,CAAM8C,GAAIP,GACR,kBAACjC,EAAD,KACE,kBAACC,EAAD,KACE,kBAAC,IAAD,QAGJ,kBAACE,EAAD,KAAiB4B,GACjB,kBAACxB,EAAD,KAAwByB,KAG5B,gCACE,kBAACvB,EAAD,QAAgB2B,EAAEK,sBAClB,kBAAC5B,EAAD,KACGsB,aADH,EACGA,EAAMR,KAAI,SAACe,EAAKd,GAAN,OACT,wBAAIU,IAAKV,GACP,kBAAC,OAAD,CAAMY,GAAE,mBAAqBG,IAAUD,GAA/B,KAAR,IAAkDA,mBAuBzE,IAAME,EAAS","file":"component---src-pages-impressum-index-js-7314f9b13f7fcd9c99c6.js","sourcesContent":["import React from 'react';\r\nimport { graphql, Link } from 'gatsby';\r\nimport { Helmet } from 'react-helmet';\r\nimport kebabCase from 'lodash/kebabCase';\r\nimport PropTypes from 'prop-types';\r\nimport { Layout } from '@components';\r\nimport { IconZap } from '@components/icons';\r\nimport styled from 'styled-components';\r\nimport { theme, mixins, media, Main } from '@styles';\r\nconst { colors, fontSizes, fonts } = theme;\r\n\r\nconst StyledMainContainer = styled(Main)`\r\n  & > header {\r\n    text-align: center;\r\n    margin-bottom: 100px;\r\n\r\n    a {\r\n      &:hover,\r\n      &:focus {\r\n        cursor: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='40' height='48' viewport='0 0 100 100' style='fill:black;font-size:24px;'><text y='50%'>⚡</text></svg>\")\r\n            20 0,\r\n          auto;\r\n      }\r\n    }\r\n  }\r\n\r\n  footer {\r\n    ${mixins.flexBetween};\r\n    margin-top: 20px;\r\n    width: 100%;\r\n  }\r\n`;\r\nconst StyledGrid = styled.div`\r\n  margin-top: 50px;\r\n\r\n  .postsImpressum {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n    grid-gap: 15px;\r\n    position: relative;\r\n    ${media.desktop`grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));`};\r\n  }\r\n`;\r\nconst StyledPostInner = styled.div`\r\n  ${mixins.boxShadow};\r\n  ${mixins.flexBetween};\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  position: relative;\r\n  padding: 2rem 1.75rem;\r\n  height: 100%;\r\n  border-radius: ${theme.borderRadius};\r\n  transition: ${theme.transition};\r\n  background-color: ${colors.lightNavy};\r\n  header,\r\n  a {\r\n    width: 100%;\r\n  }\r\n`;\r\nconst StyledPost = styled.div`\r\n  transition: ${theme.transition};\r\n  cursor: default;\r\n  &:hover,\r\n  &:focus {\r\n    outline: 0;\r\n    ${StyledPostInner} {\r\n      transform: translateY(-5px);\r\n    }\r\n  }\r\n`;\r\nconst StyledPostHeader = styled.div`\r\n  ${mixins.flexBetween};\r\n  margin-bottom: 30px;\r\n`;\r\nconst StyledFolder = styled.div`\r\n  color: ${colors.green};\r\n  svg {\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n`;\r\nconst StyledPostName = styled.h5`\r\n  margin: 0 0 10px;\r\n  font-size: ${fontSizes.xxl};\r\n  color: ${colors.lightestSlate};\r\n`;\r\nconst StyledPostDescription = styled.div`\r\n  font-size: 17px;\r\n  color: ${colors.lightSlate};\r\n`;\r\nconst StyledDate = styled.span`\r\n  text-transform: uppercase;\r\n  font-family: ${fonts.SFMono};\r\n  font-size: ${fontSizes.xs};\r\n  color: ${colors.lightSlate};\r\n`;\r\nconst StyledTags = styled.ul`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  flex-wrap: wrap;\r\n  padding: 0;\r\n  margin: 0;\r\n  list-style: none;\r\n\r\n  li {\r\n    font-family: ${fonts.SFMono};\r\n    font-size: ${fontSizes.xs};\r\n    color: ${colors.green};\r\n    line-height: 1.75;\r\n    margin-right: 15px;\r\n    &:last-of-type {\r\n      margin-right: 0;\r\n    }\r\n    a {\r\n      ${mixins.inlineLink};\r\n    }\r\n  }\r\n`;\r\n\r\nconst ImpressumPage = ({ location, data }) => {\r\n  const postsImpressum = data.allMarkdownRemark.edges;\r\n\r\n  return (\r\n    <Layout location={location}>\r\n      <Helmet>\r\n        <title>Impressum und Datenschutzerklärung | Robert Philipp Lukas</title>\r\n        <link rel=\"canonical\" href=\"https://github.com/robbluk\" />\r\n      </Helmet>\r\n\r\n      <StyledMainContainer>\r\n        <header>\r\n          <h1 className=\"big-title\">Impressum und Datenschutzerklärung</h1>\r\n          <p className=\"subtitle\">\r\n            <a\r\n              href=\"https://www.bmuv.de/themen/verbraucherschutz/digitaler-verbraucherschutz/impressumspflicht\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\">\r\n              Bundesministerium für Umwelt, Naturschutz, nukleare Sicherheit und Verbraucherschutz\r\n            </a>\r\n          </p>\r\n        </header>\r\n\r\n        <StyledGrid>\r\n          <div className=\"postsImpressum\">\r\n            {postsImpressum.length > 0 &&\r\n              postsImpressum.map(({ node }, i) => {\r\n                const { frontmatter } = node;\r\n                const { title, description, slug, date, tags } = frontmatter;\r\n                const d = new Date(date);\r\n\r\n                return (\r\n                  <StyledPost key={i} tabIndex=\"0\">\r\n                    <StyledPostInner>\r\n                      <header>\r\n                        <Link to={slug}>\r\n                          <StyledPostHeader>\r\n                            <StyledFolder>\r\n                              <IconZap />\r\n                            </StyledFolder>\r\n                          </StyledPostHeader>\r\n                          <StyledPostName>{title}</StyledPostName>\r\n                          <StyledPostDescription>{description}</StyledPostDescription>\r\n                        </Link>\r\n                      </header>\r\n                      <footer>\r\n                        <StyledDate>{`${d.toLocaleDateString()}`}</StyledDate>\r\n                        <StyledTags>\r\n                          {tags?.map((tag, i) => (\r\n                            <li key={i}>\r\n                              <Link to={`/impressum/tags/${kebabCase(tag)}/`}>#{tag}</Link>\r\n                            </li>\r\n                          ))}\r\n                        </StyledTags>\r\n                      </footer>\r\n                    </StyledPostInner>\r\n                  </StyledPost>\r\n                );\r\n              })}\r\n          </div>\r\n        </StyledGrid>\r\n      </StyledMainContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nImpressumPage.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ImpressumPage;\r\n\r\nexport const pageQuery = graphql`\r\n  {\r\n    allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/postsImpressum/\" }, frontmatter: { draft: { ne: true } } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            description\r\n            slug\r\n            date\r\n            tags\r\n            draft\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}