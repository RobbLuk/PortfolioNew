{"version":3,"sources":["webpack:///./src/pages/activity/index.js"],"names":["colors","theme","fontSizes","fonts","StyledMainContainer","styled","Main","mixins","flexBetween","StyledGrid","div","media","desktop","StyledPostInner","boxShadow","borderRadius","transition","lightNavy","StyledPost","StyledPostHeader","StyledFolder","green","StyledPostName","h5","xxl","lightestSlate","StyledPostDescription","lightSlate","StyledDate","span","SFMono","xs","StyledTags","ul","inlineLink","ActivityPage","location","postsActivity","data","allMarkdownRemark","edges","rel","href","className","length","map","i","frontmatter","node","title","description","slug","date","tags","d","Date","key","tabIndex","to","xmlns","width","height","fill","viewBox","fillRule","toLocaleDateString","tag","kebabCase","pageQuery"],"mappings":"kaASQA,EAA6BC,IAA7BD,OAAQE,EAAqBD,IAArBC,UAAWC,EAAUF,IAAVE,MAErBC,EAAsBC,YAAOC,KAAV,oFAAGD,CAAH,0TAgBnBE,IAAOC,aAKPC,EAAaJ,IAAOK,IAAV,2EAAGL,CAAH,gJAQVM,IAAMC,QARI,MAWVC,EAAkBR,IAAOK,IAAV,gFAAGL,CAAH,wLACjBE,IAAOO,UACPP,IAAOC,YAMQP,IAAMc,aACTd,IAAMe,WACAhB,EAAOiB,WAMvBC,EAAab,IAAOK,IAAV,2EAAGL,CAAH,8FACAJ,IAAMe,WAKhBH,GAKAM,EAAmBd,IAAOK,IAAV,iFAAGL,CAAH,4BAClBE,IAAOC,aAGLY,EAAef,IAAOK,IAAV,6EAAGL,CAAH,2CACPL,EAAOqB,OAMZC,EAAiBjB,IAAOkB,GAAV,+EAAGlB,CAAH,6CAELH,EAAUsB,IACdxB,EAAOyB,eAEZC,EAAwBrB,IAAOK,IAAV,sFAAGL,CAAH,8BAEhBL,EAAO2B,YAEZC,EAAavB,IAAOwB,KAAV,2EAAGxB,CAAH,sEAECF,EAAM2B,OACR5B,EAAU6B,GACd/B,EAAO2B,YAEZK,EAAa3B,IAAO4B,GAAV,2EAAG5B,CAAH,8MASGF,EAAM2B,OACR5B,EAAU6B,GACd/B,EAAOqB,MAOZd,IAAO2B,YAoEAC,UA/DM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SAChBC,EADqC,EAAXC,KACLC,kBAAkBC,MAE7C,OACE,kBAAC,IAAD,CAAQJ,SAAUA,GAChB,kBAAC,SAAD,KACE,mEACA,0BAAMK,IAAI,YAAYC,KAAK,gCAG7B,kBAACtC,EAAD,KACE,gCACE,wBAAIuC,UAAU,aAAd,aAEF,kBAAClC,EAAD,KACE,yBAAKkC,UAAU,iBACZN,EAAcO,OAAS,GACtBP,EAAcQ,KAAI,WAAWC,GAAO,IAC1BC,EADyB,EAAdC,KACXD,YACAE,EAAyCF,EAAzCE,MAAOC,EAAkCH,EAAlCG,YAAaC,EAAqBJ,EAArBI,KAAMC,EAAeL,EAAfK,KAAMC,EAASN,EAATM,KAClCC,EAAI,IAAIC,KAAKH,GAEnB,OACE,kBAAClC,EAAD,CAAYsC,IAAKV,EAAGW,SAAS,KAC3B,kBAAC5C,EAAD,KACE,gCACE,kBAAC,OAAD,CAAM6C,GAAIP,GACR,kBAAChC,EAAD,KACE,kBAACC,EAAD,KACE,yBAAKuC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAenB,UAAU,iBAAiBoB,QAAQ,aACpH,0BAAMC,SAAS,UAAUV,EAAE,8MAIjC,kBAAChC,EAAD,KAAiB2B,GACjB,kBAACvB,EAAD,KAAwBwB,KAG5B,gCACE,kBAACtB,EAAD,QAAgB0B,EAAEW,sBAClB,kBAACjC,EAAD,KACGqB,aADH,EACGA,EAAMR,KAAI,SAACqB,EAAKpB,GAAN,OACT,wBAAIU,IAAKV,GACP,kBAAC,OAAD,CAAMY,GAAE,kBAAoBS,IAAUD,GAA9B,KAAR,IAAiDA,mBAsBxE,IAAME,EAAS","file":"component---src-pages-activity-index-js-95b15063068b2b0787c9.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { graphql, Link } from 'gatsby';\r\nimport { Helmet } from 'react-helmet';\r\nimport kebabCase from 'lodash/kebabCase';\r\nimport PropTypes from 'prop-types';\r\nimport { Layout } from '@components';\r\nimport styled from 'styled-components';\r\nimport { theme, mixins, media, Main } from '@styles';\r\nconst { colors, fontSizes, fonts } = theme;\r\n\r\nconst StyledMainContainer = styled(Main)`\r\n  & > header {\r\n    text-align: center;\r\n    margin-bottom: 100px;\r\n\r\n    a {\r\n      &:hover,\r\n      &:focus {\r\n        cursor: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='40' height='48' viewport='0 0 100 100' style='fill:black;font-size:24px;'><text y='50%'>âš¡</text></svg>\")\r\n            20 0,\r\n          auto;\r\n      }\r\n    }\r\n  }\r\n\r\n  footer {\r\n    ${mixins.flexBetween};\r\n    margin-top: 20px;\r\n    width: 100%;\r\n  }\r\n`;\r\nconst StyledGrid = styled.div`\r\n  margin-top: 50px;\r\n\r\n  .postsActivity {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n    grid-gap: 15px;\r\n    position: relative;\r\n    ${media.desktop`grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));`};\r\n  }\r\n`;\r\nconst StyledPostInner = styled.div`\r\n  ${mixins.boxShadow};\r\n  ${mixins.flexBetween};\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  position: relative;\r\n  padding: 2rem 1.75rem;\r\n  height: 100%;\r\n  border-radius: ${theme.borderRadius};\r\n  transition: ${theme.transition};\r\n  background-color: ${colors.lightNavy};\r\n  header,\r\n  a {\r\n    width: 100%;\r\n  }\r\n`;\r\nconst StyledPost = styled.div`\r\n  transition: ${theme.transition};\r\n  cursor: default;\r\n  &:hover,\r\n  &:focus {\r\n    outline: 0;\r\n    ${StyledPostInner} {\r\n      transform: translateY(-5px);\r\n    }\r\n  }\r\n`;\r\nconst StyledPostHeader = styled.div`\r\n  ${mixins.flexBetween};\r\n  margin-bottom: 30px;\r\n`;\r\nconst StyledFolder = styled.div`\r\n  color: ${colors.green};\r\n  svg {\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n`;\r\nconst StyledPostName = styled.h5`\r\n  margin: 0 0 10px;\r\n  font-size: ${fontSizes.xxl};\r\n  color: ${colors.lightestSlate};\r\n`;\r\nconst StyledPostDescription = styled.div`\r\n  font-size: 17px;\r\n  color: ${colors.lightSlate};\r\n`;\r\nconst StyledDate = styled.span`\r\n  text-transform: uppercase;\r\n  font-family: ${fonts.SFMono};\r\n  font-size: ${fontSizes.xs};\r\n  color: ${colors.lightSlate};\r\n`;\r\nconst StyledTags = styled.ul`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  flex-wrap: wrap;\r\n  padding: 0;\r\n  margin: 0;\r\n  list-style: none;\r\n\r\n  li {\r\n    font-family: ${fonts.SFMono};\r\n    font-size: ${fontSizes.xs};\r\n    color: ${colors.green};\r\n    line-height: 1.75;\r\n    margin-right: 15px;\r\n    &:last-of-type {\r\n      margin-right: 0;\r\n    }\r\n    a {\r\n      ${mixins.inlineLink};\r\n    }\r\n  }\r\n`;\r\n\r\nconst ActivityPage = ({ location, data }) => {\r\n  const postsActivity = data.allMarkdownRemark.edges;\r\n\r\n  return (\r\n    <Layout location={location}>\r\n      <Helmet>\r\n        <title>Activity | Robert Philipp Lukas </title>\r\n        <link rel=\"canonical\" href=\"https://github.com/robbluk\" />\r\n      </Helmet>\r\n\r\n      <StyledMainContainer>\r\n        <header>\r\n          <h1 className=\"big-title\">Activity</h1>\r\n        </header>\r\n        <StyledGrid>\r\n          <div className=\"postsActivity\">\r\n            {postsActivity.length > 0 &&\r\n              postsActivity.map(({ node }, i) => {\r\n                const { frontmatter } = node;\r\n                const { title, description, slug, date, tags } = frontmatter;\r\n                const d = new Date(date);\r\n\r\n                return (\r\n                  <StyledPost key={i} tabIndex=\"0\">\r\n                    <StyledPostInner>\r\n                      <header>\r\n                        <Link to={slug}>\r\n                          <StyledPostHeader>\r\n                            <StyledFolder>\r\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-activity\" viewBox=\"0 0 16 16\">\r\n                                <path fillRule=\"evenodd\" d=\"M6 2a.5.5 0 0 1 .47.33L10 12.036l1.53-4.208A.5.5 0 0 1 12 7.5h3.5a.5.5 0 0 1 0 1h-3.15l-1.88 5.17a.5.5 0 0 1-.94 0L6 3.964 4.47 8.171A.5.5 0 0 1 4 8.5H.5a.5.5 0 0 1 0-1h3.15l1.88-5.17A.5.5 0 0 1 6 2\"/>\r\n                              </svg>\r\n                            </StyledFolder>\r\n                          </StyledPostHeader>\r\n                          <StyledPostName>{title}</StyledPostName>\r\n                          <StyledPostDescription>{description}</StyledPostDescription>\r\n                        </Link>\r\n                      </header>\r\n                      <footer>\r\n                        <StyledDate>{`${d.toLocaleDateString()}`}</StyledDate>\r\n                        <StyledTags>\r\n                          {tags?.map((tag, i) => (\r\n                            <li key={i}>\r\n                              <Link to={`/activity/tags/${kebabCase(tag)}/`}>#{tag}</Link>\r\n                            </li>\r\n                          ))}\r\n                        </StyledTags>\r\n                      </footer>\r\n                    </StyledPostInner>\r\n                  </StyledPost>\r\n                );\r\n              })}\r\n          </div>\r\n        </StyledGrid>\r\n      </StyledMainContainer>\r\n    </Layout>\r\n  );\r\n};\r\nActivityPage.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ActivityPage;\r\n\r\nexport const pageQuery = graphql`\r\n  {\r\n    allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/postsActivity/\" }, frontmatter: { draft: { ne: true } } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            description\r\n            slug\r\n            date\r\n            tags\r\n            draft\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}